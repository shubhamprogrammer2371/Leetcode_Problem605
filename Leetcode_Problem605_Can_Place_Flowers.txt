bool canPlaceFlowers(int *flowerbed, int flowerbedSize, int n)
{
    int plant = 0;
    for (int i = 0; i < flowerbedSize; i++) {
        if (flowerbed[i] == 0 && (i == 0 || flowerbed[i-1] == 0) && (i == flowerbedSize-1 || flowerbed[i+1] == 0))
        {
            flowerbed[i] = 1;
            plant++;
        }
        if (plant >= n) 
            return 1;
    }
    return false;
}


--------------------------------------------------------------------------------------------------------------------------


bool canPlaceFlowers(int *flowerbed, int flowerbedSize, int n)
{
    int plant = 0 , i = 0;
    if ((n == 0) || (flowerbedSize == 1) && (flowerbed[0] == 0) && (n == 1))
        return 1;
    else if ((flowerbedSize == 1) && (flowerbed[0] == 1))
        return 0;
    else
    {
        if(flowerbed[0] == 0 && flowerbed[1] == 0)
        {
            flowerbed[0] = 1;
            plant++;
        }
        else
            i++;
        for (i ; i < flowerbedSize; i++)
        {
            if ((i == flowerbedSize - 1 && flowerbed[i - 1] == 0) && flowerbed[i] == 0)
                plant++;
            else if (i == flowerbedSize - 1 && flowerbed[i] == 1)
                return plant >= n;
            else if (flowerbed[i] == 0 && flowerbed[i - 1] == 0 && flowerbed[i + 1] == 0)
            {
                flowerbed[i] = 1;
                plant++;
            }
        }
    }
    return plant >= n;
}